// Code generated by hand; DO NOT EDIT.
// This is a little bit stupid, but there are many public constants which is no value for writing godoc comment.

package prompt

// KeyCode is the type represents a key inserted by the user.
//go:generate stringer -type=KeyCode
type KeyCode int32

type ControlSequence string

// Key is the type contains a logical Key and its control sequence.
type KeyDefinition struct {
	Key      KeyCode
	Sequence ControlSequence
}

const (
	// Key is not defined
	NotDefined KeyCode = iota

	// Key which is ignored. (The key binding for this key should not do anything.)
	Ignore

	// Matches any key.
	Any

	Escape

	A
	B
	C
	D
	E
	F
	G
	H
	I
	J
	K
	L
	M
	N
	O
	P
	Q
	R
	S
	T
	U
	V
	W
	X
	Y
	Z

	// must prefix these with 'Key' :(
	Key1
	Key2
	Key3
	Key4
	Key5
	Key6
	Key7
	Key8
	Key9
	Key0

	Backtick
	Circumflex
	Underscore
	Minus
	Equals
	Backspace
	SquareOpen
	SquareClose
	SingleQuote
	Backslash
	LessThan
	Space
	Comma
	Point
	Slash

	Up
	Down
	Right
	Left

	Home
	End
	Delete
	ShiftDelete
	ControlDelete
	PageUp
	PageDown
	BackTab
	Insert

	// Aliases.
	Tab
	Enter
	// Actually Enter equals ControlM, not ControlJ,
	// However, in prompt_toolkit, we made the mistake of translating
	// \r into \n during the input, so everyone is now handling the
	// enter key by binding ControlJ.

	// From now on, it's better to bind `ASCII_SEQUENCES.Enter` everywhere,
	// because that's future compatible, and will still work when we
	// stop replacing \r by \n.

	F1
	F2
	F3
	F4
	F5
	F6
	F7
	F8
	F9
	F10
	F11
	F12
	F13
	F14
	F15
	F16
	F17
	F18
	F19
	F20
	F21
	F22
	F23
	F24

	// Special
	CPRResponse
	Vt100MouseEvent
	WindowsMouseEvent
	BracketedPaste

	// Key modifiers, must be last (before the back-compat defs)
	Shift   = 0x10000
	Control = 0x20000
	Alt     = 0x40000

	// Constants for backwards compatibility:

	ControlA = Control | A
	ControlB = Control | B
	ControlC = Control | C
	ControlD = Control | D
	ControlE = Control | E
	ControlF = Control | F
	ControlG = Control | G
	ControlH = Control | H
	ControlI = Control | I
	ControlJ = Control | J
	ControlK = Control | K
	ControlL = Control | L
	ControlM = Control | M
	ControlN = Control | N
	ControlO = Control | O
	ControlP = Control | P
	ControlQ = Control | Q
	ControlR = Control | R
	ControlS = Control | S
	ControlT = Control | T
	ControlU = Control | U
	ControlV = Control | V
	ControlW = Control | W
	ControlX = Control | X
	ControlY = Control | Y
	ControlZ = Control | Z

	ControlSpace       = Control | Space
	ControlBackslash   = Control | Backslash
	ControlSquareClose = Control | SquareClose
	ControlCircumflex  = Control | Circumflex
	ControlUnderscore  = Control | Underscore
	ControlLeft        = Control | Left
	ControlRight       = Control | Right
	ControlUp          = Control | Up
	ControlDown        = Control | Down

	ShiftLeft  = Shift | Left
	ShiftUp    = Shift | Up
	ShiftDown  = Shift | Down
	ShiftRight = Shift | Right
)
